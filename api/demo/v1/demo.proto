syntax = "proto3";

package demo.v1;

option go_package = "github.com/company/kuma-demo-protos/gen/go/demo/v1;demov1";
option py_generic_services = true;

// DemoService 정의
service DemoService {
    rpc SayHello (HelloRequest) returns (HelloReply) {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc GetStatus (StatusRequest) returns (StatusReply) {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc StreamMessages (StreamRequest) returns (stream StreamResponse);
}

// 요청 메시지들
message HelloRequest {
    string name = 1;
    int32 age = 2;
    repeated string interests = 3;
}

message StatusRequest {
    string service_name = 1;
}

message StreamRequest {
    string topic = 1;
    int32 count = 2;
}

// 응답 메시지들
message HelloReply {
    string message = 1;
    int64 timestamp = 2;
    string server_id = 3;
}

message StatusReply {
    string status = 1;
    string version = 2;
    int64 uptime_seconds = 3;
    int32 active_connections = 4;
}

message StreamResponse {
    string data = 1;
    int32 sequence = 2;
    int64 timestamp = 3;
}
